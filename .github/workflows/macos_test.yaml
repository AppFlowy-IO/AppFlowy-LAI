name: Run macOS tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run_test:
    runs-on: macOS

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Ollama installation
        id: check_ollama
        run: |
          if command -v ollama &> /dev/null; then
            echo "installed=true" >> $GITHUB_OUTPUT
          else
            echo "installed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Ollama on macOS
        if: runner.os == 'macOS' && steps.check_ollama.outputs.installed == 'false'
        run: brew install --cask ollama

      - name: Check Ollama server status
        id: check_server
        run: |
          if curl -s http://localhost:11434 > /dev/null 2>&1; then
            echo "running=true" >> $GITHUB_OUTPUT
          else
            echo "running=false" >> $GITHUB_OUTPUT
          fi

      - name: Start serving
        if: steps.check_server.outputs.running == 'false'
        run: |
          ollama serve &
          sleep 5
          curl -i http://localhost:11434

      - name: Check model presence
        id: check_model
        run: |
          if ollama list 2>/dev/null | grep -q 'llama3.1'; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Pull models
        if: steps.check_model.outputs.exists == 'false'
        run: |
          ollama run llama3.1
          ollama pull nomic-embed-text

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.LOCAL_AI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.LOCAL_AI_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.LOCAL_AI_AWS_REGION }}

      - name: Download artifact from S3
        run: |
          aws s3 cp  s3://${{ secrets.TEST_LOCAL_AI_BUCKET_NAME }}/macos-latest/ollama_ai_plugin.zip ollama_ai_plugin.zip
          unzip ollama_ai_plugin.zip -d ollama_ai_plugin
          ls
        shell: bash

      - name: Prepare env
        run: |
          ls
          ABS_PATH=$(pwd)
          OLLAMA_PLUGIN_EXE_PATH=$ABS_PATH/ollama_ai_plugin
          
          cp dev.env .env
          sed -i '' 's|RUST_LOG=.*|RUST_LOG=trace|' .env
          
          sed -i '' "s|OLLAMA_PLUGIN_EXE_PATH=.*|OLLAMA_PLUGIN_EXE_PATH=$OLLAMA_PLUGIN_EXE_PATH|" .env
          cat .env
        shell: bash


      - name: Run tests
        run: cargo test ci_
        shell: bash

      - name: Cleanup downloaded artifacts
        run: |
          rm -rf ollama_ai_plugin.zip
          rm -rf ollama_ai_plugin
